buildscript {
    ext.kotlin_version = '1.3.10'

    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jmailen.gradle:kotlinter-gradle:1.20.1"
    }
}

plugins {
    id "org.jlleitschuh.gradle.ktlint" version "6.3.1"
    id 'cpp-library'
}

//build.dependsOn ":utilities:build", ":dynamiclibrary:build", ":mutationfinder:build", ":mutator:build"

task getAll() {
    dependsOn ":utilities:build", ":dynamiclibrary:build", ":mutationfinder:build", ":mutator:build"
    doLast {
        println project('mutationfinder').tasks.getByName('generateScripts')
        copy {
            duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates
            from project('mutationfinder').tasks.getByName('generateScripts')
            from project('mutator').tasks.getByName('generateScripts')
            into 'build/install/LLVM_Mutation_Tool/bin/'
        }
        copy {
            duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates
            from project('utilities').tasks.getByName('linkDebug')
            from project('mutationfinder').tasks.getByName('linkDebug')
            from project('mutator').tasks.getByName('linkDebug')
            from project('dynamiclibrary').tasks.getByName('linkDebug')
            into 'build/install/LLVM_Mutation_Tool/lib/'
        }
    }
}

build.finalizedBy getAll

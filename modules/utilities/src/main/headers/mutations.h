//
// Created by Bj√∂rn Mathis on 11.09.20.
//

#ifndef LLVM_MUTATION_TOOL_MUTATIONS_H
#define LLVM_MUTATION_TOOL_MUTATIONS_H

#define MALLOC 0
#define FGETS_MATCH_BUFFER_SIZE 1
#define SIGNED_LESS_THAN 2
#define SIGNED_GREATER_THAN 3
#define SIGNED_LESS_THAN_EQUALTO 4
#define SIGNED_GREATER_THAN_EQUALTO 5
#define FREE_FUNCTION_ARGUMENT 6
#define PTHREAD_MUTEX 7
#define ATOMIC_CMP_XCHG 8
#define ATOMICRMW_REPLACE 9
#define SIGNED_TO_UNSIGNED 10 // convert a signed comparison to an unsigned one
#define UNSIGNED_TO_SIGNED 11 // convert an unsigned comparison to a signed one
#define SWITCH_SHIFT 12 // switch shift from logical to arithmetic or vice versa
#define CALLOC 13
#define DELETE_LOCAL_STORE 14 // collect local variables and then remove all stores on them in the function
#define UNSIGNED_LESS_THAN 15
#define UNSIGNED_GREATER_THAN 16
#define UNSIGNED_LESS_THAN_EQUALTO 17
#define UNSIGNED_GREATER_THAN_EQUALTO 18
#define INET_ADDR_FAIL_WITHOUTCHECK 19
#define COMPARE_EQUAL_TO 20
#define PRINTF 21
#define SPRINTF 22
#define SNPRINTF 23
#define NEW_ARRAY 24
#define SWITCH_PLUS_MINUS 25
#define REDIRECT_BRANCH 26
#define DELETE_ARRAY 27

// testing different mutations for less than and great than
#define SIGNED_LESS_THAN_SQUARED 102
#define SIGNED_LESS_THAN_EQUALTO_SQUARED 104
#define UNSIGNED_LESS_THAN_SQUARED 115
#define UNSIGNED_LESS_THAN_EQUALTO_SQUARED 117

#define SIGNED_GREATER_THAN_HALVED 103
#define SIGNED_GREATER_THAN_EQUALTO_HALVED 105
#define UNSIGNED_GREATER_THAN_HALVED 116
#define UNSIGNED_GREATER_THAN_EQUALTO_HALVED 118

#define SIGNED_GREATER_THAN_SQRT 203
#define SIGNED_GREATER_THAN_EQUALTO_SQRT 205
#define UNSIGNED_GREATER_THAN_SQRT 216
#define UNSIGNED_GREATER_THAN_EQUALTO_SQRT 218

#endif //LLVM_MUTATION_TOOL_MUTATIONS_H

FROM mutator_llvm:901

# get necessary dependencies
RUN apt-get update
RUN apt install -y git \
    curl \
    zip \
    nano \
    htop \
    python3-distutils \
    libzmq3-dev \
    openjdk-11-jdk \
    pkg-config \
    libz-dev \
    libreadline-dev \
    time \
    telnet \
    autoconf \
    libgnutls28-dev

WORKDIR /home/
RUN mkdir -p downloads
WORKDIR /home/downloads
RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
RUN python3 get-pip.py

RUN pip3 install wllvm

ENV PATH "/root/toolchains/build/llvm+clang-901-x86_64-linux-gnu_build/bin/:$PATH"
ENV LLVM_COMPILER "clang"

RUN wget https://downloads.gradle-dn.com/distributions/gradle-6.6.1-bin.zip
RUN unzip gradle-6.6.1-bin.zip
RUN mv gradle-6.6.1 /usr/local/gradle

ENV PATH "/usr/local/gradle/bin/:$PATH"

WORKDIR /home/
RUN mkdir mutator
WORKDIR mutator

COPY modules /home/mutator/modules
COPY samples /home/mutator/samples
COPY build.gradle /home/mutator/
COPY run_mutation.py /home/mutator/
RUN chmod +x run_mutation.py
COPY settings.gradle /home/mutator
# on linux gradle looks for ar, so we need to link llvm-ar
RUN ln /root/toolchains/build/llvm+clang-901-x86_64-linux-gnu_build/bin/llvm-ar /root/toolchains/build/llvm+clang-901-x86_64-linux-gnu_build/bin/ar
RUN echo "llvmBinPath=/root/toolchains/build/llvm+clang-901-x86_64-linux-gnu_build/bin/" > gradle.properties


RUN gradle clean && gradle build

# set library paths for used shared libraries s.t. the system finds them
ENV LD_LIBRARY_PATH "/home/mutator/build/install/LLVM_Mutation_Tool/lib/:/root/toolchains/llvm+clang-901-x86_64-linux-gnu/lib/"

#### install gllvm
WORKDIR /root/

RUN wget -q -c https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz -O - | tar -xz -C /usr/local

ENV PATH="${PATH}:/root/.cargo/bin:/usr/local/go/bin:/root/go/bin"

RUN go get github.com/SRI-CSL/gllvm/cmd/...


# ################################################################################
# # re2
# WORKDIR /home/mutator/samples
# RUN git clone https://github.com/google/re2.git re2-code
# WORKDIR /home/mutator/samples/re2-code
# RUN git checkout 58141dc9c92189ed8d046f494f5e034d5db91bea

# # # build re2, extract the bitcode file from re2 and copy the bitcode file to a special folder for running the mutation on it
# RUN CC=wllvm CXX=wllvm++ make fuzz -j`nproc` && \
#     cd obj/test/ && \
#     extract-bc re2_fuzzer && \
#     wllvm++ -static re2_fuzzer.bc -lpthread -o re2_fuzzer_static && \
#     extract-bc re2_fuzzer_static && \
#     mv re2_fuzzer.bc /home/mutator/samples/re2/re2_fuzzer.bc


# # # # build re2, extract the bitcode file from re2 and copy the bitcode file to a special folder for running the mutation on it
# # RUN CC=wllvm CXX=wllvm CXX_FLAGS="-D_GLIBCXX_USE_CXX11_ABI=1" make -j40 && \
# #     cd obj/so && \
# #     extract-bc libre2.so && \
# #     mkdir /home/mutator/samples/re2 && \
# #     mv libre2.so.bc /home/mutator/samples/re2

# WORKDIR /home/mutator

# RUN ./run_mutation.py -p samples/re2/re2_fuzzer.bc -bc

# ################################################################################
# # vorbis

# RUN apt install -y automake libtool

# WORKDIR /home/mutator/samples
# RUN git clone https://github.com/xiph/vorbis.git
# WORKDIR /home/mutator/samples/vorbis
# RUN git checkout 83a82dd9296400d811b78c06e9ca429e24dd1e5c

# WORKDIR /home/mutator/samples/vorbis/
# ENV SRC=/home/mutator/samples/vorbis
# ENV OUT=/home/mutator/samples/vorbis/out
# ENV WORK=/home/mutator/samples/vorbis/work
# RUN ./autogen.sh && \
#     ./configure --prefix="$WORK" --enable-static --disable-shared --disable-crc && \
#     make clean && \
#     make -j$(nproc) && \
#     make install && \
#     cd $SRC && \
#     ./autogen.sh && \
#     ./configure --prefix="$WORK" --enable-static --disable-shared && \
#     make clean && \
#     make -j$(nproc) && \
#     make install && \
#     wllvm++ $SRC/vorbis/contrib/oss-fuzz/decode_fuzzer.cc -o $OUT/decode_fuzzer -L"$WORK/lib" -I"$WORK/include" $LIB_FUZZING_ENGINE -lvorbisfile -lvorbis -logg

# # WORKDIR /home/mutator

# # RUN ./run_mutation.py -p samples/re2/re2_fuzzer.bc -bc

################################################################################
# guetzli

RUN apt install -y libpng-dev

WORKDIR /home/mutator/samples
RUN git clone https://github.com/google/guetzli.git
WORKDIR /home/mutator/samples/guetzli
RUN git checkout 214f2bb42abf5a577c079d00add5d6cc470620d3

RUN CC=gclang CXX=gclang++ make
RUN gclang++ -static -I. ../guetzli_harness/harness.cc fuzz_target.cc ./bin/Release/libguetzli_static.a -o fuzz_target && \
    get-bc fuzz_target

WORKDIR /home/mutator

# RUN ./run_mutation.py -bc -cpp samples/guetzli/fuzz_target.bc

################################################################################
# other stuff

# ENV TRIGGERED_FILE some/file/to/report/mutation/trigger
# ENV TRIGGERED_OUTPUT "Some output that indicates mutation triggering. Can be left blank."
# RUN ./run_mutation.py -p samples/re2/libre2.so.bc -bc > mutationlog.txt 2>&1
